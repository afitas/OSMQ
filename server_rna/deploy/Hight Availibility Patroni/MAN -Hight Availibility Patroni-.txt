Patroni : solution intégrale

* solution mise au point part Zalendo
https://patroni.readthedocs.io/


à base de python


management de postgresql


gestion automatique de failover grâce à une API


stockage avec un ETCD (stockage clef/valeur)



                   +----------------+
 +--------+    +---+ PG-Node1 Master|
 |  ETCD  +----+   +----------------+
 +--------+2379|
               |   +---------------+
 +--------+    +---+ PG-Node2 SALVE|
 | HAPROXY+----+   +---------------+
 +--------+    |
5000     8008  |   +---------+
               +---+   PGx   |
                   +---------+


ETCD

* idéal en cluster et isolé

Dans cette solution les serveurs : haproxy + etcd = sont dans la même machine


```
sudo apt install -y etcd haproxy	

Copier le contenu du fichier etcd dans le chemain suivant : /etc/default/etcd

sudo systemctl restart etcd

Check Port listning netstat -nta

-------------------------------------------------------------------

# POSTGRESQL - PATRONI 



* mise en place de patroni sur le NODE ou CLUSTER 1 "MASTER" 
sudo apt install -y python-etcd postgresql-13 && install patroni

sudo systemctl stop postgresql
sudo ln -s /usr/lib/postgresql/13/bin/pg_ctl /usr/bin/

sudo mkdir /data/patroni -p
sudo chown postgres:postgres /data/patroni
sudo chmod 700 /data/patroni
Copier le contenu du fichier node 1 dans le chemain suivant /etc/patroni.yml

* mise en place de patroni sur le NODE ou CLUSTER 2 "SLAVE"
sudo apt install -y python-etcd postgresql-13 && install patroni

sudo systemctl stop postgresql
sudo ln -s /usr/lib/postgresql/13/bin/pg_ctl /usr/bin/

sudo mkdir /data/patroni -p
sudo chown postgres:postgres /data/patroni
sudo chmod 700 /data/patroni
Copier le contenu du fichier node 1 dans le chemain suivant /etc/patroni.yml

------------------------------------------------------------------

# Daemon Boot service

Copier le contenu du fichier de configuration patroni.service dans le chemain suivant /etc/systemd/system/patroni.service

sudo systemctl daemon-reload && systemctl restart patroni && systemctl enable patroni && systemctl disable postgresql

-----------------------------------------------------------------

# HAPROXY

Copier le contenu du fichier de configuration patroni.service dans le chemain suivant /etc/haproxy/haproxy.cfg

sudo service haproxy restart

----------------------------------------------------------------

# TEST


psql -h 192.168.0.225 -p 5000 -U postgres
CREATE DATABASE test;
systemctl stop patroni
patronictl -c /etc/patroni.yml list
etcdctl ls / --recursive
etcdctl get /db/postgres/members/node1
