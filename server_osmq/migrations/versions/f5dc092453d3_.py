"""empty message

Revision ID: f5dc092453d3
Revises: 
Create Date: 2021-02-03 13:26:58.435996

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision = 'f5dc092453d3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_component',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('component_type', sa.String(), nullable=True),
    sa.Column('valueInformation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('validFrom', sa.Date(), nullable=True),
    sa.Column('validTo', sa.Date(), nullable=True),
    sa.Column('openRecord', sa.Date(), nullable=True),
    sa.Column('closeRecord', sa.Date(), nullable=True),
    sa.Column('version', sa.SmallInteger(), nullable=True),
    sa.Column('lifecycleStage', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('pk'),
    sa.UniqueConstraint('id')
    )
    op.create_table('commune',
    sa.Column('code_commune', sa.String(), nullable=False),
    sa.Column('commune', sa.String(), nullable=True),
    sa.Column('code_wilaya', sa.String(), nullable=True),
    sa.Column('wilaya', sa.String(), nullable=True),
    sa.Column('geomnorm', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('geombuff', geoalchemy2.types.Geometry(from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('code_commune')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_cite',
    sa.Column('pk', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('type_lieudit',
    sa.Column('pk', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('type_organisme',
    sa.Column('pk', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('type_voie',
    sa.Column('pk', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('type_zone',
    sa.Column('pk', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('lifespan_address_component',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('component_type', sa.String(), nullable=True),
    sa.Column('valueInformation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('locale', sa.String(), nullable=True),
    sa.Column('validFrom', sa.Date(), nullable=True),
    sa.Column('validTo', sa.Date(), nullable=True),
    sa.Column('openRecord', sa.Date(), nullable=True),
    sa.Column('closeRecord', sa.Date(), nullable=True),
    sa.Column('version', sa.SmallInteger(), nullable=True),
    sa.Column('lifecycleStage', sa.String(), nullable=True),
    sa.Column('addressComponent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addressComponent_id'], ['address_component.id'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('affectation_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['affectation_id'], ['commune.code_commune'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('decision',
    sa.Column('pk', sa.Integer(), nullable=False),
    sa.Column('numero', sa.String(), nullable=True),
    sa.Column('numero_a_debatise', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('decision_type', sa.String(), nullable=True),
    sa.Column('component_type', sa.String(), nullable=True),
    sa.Column('valueInformation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('scan_decision_name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('addressComponent_id', sa.Integer(), nullable=True),
    sa.Column('code_commune', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['addressComponent_id'], ['address_component.id'], ),
    sa.ForeignKeyConstraint(['code_commune'], ['commune.code_commune'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('pk')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id'),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_table('decision')
    op.drop_table('user')
    op.drop_table('lifespan_address_component')
    op.drop_table('type_zone')
    op.drop_table('type_voie')
    op.drop_table('type_organisme')
    op.drop_table('type_lieudit')
    op.drop_table('type_cite')
    op.drop_table('role')
    op.drop_table('commune')
    op.drop_table('address_component')
    # ### end Alembic commands ###
