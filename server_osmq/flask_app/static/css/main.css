<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="{{ url_for('static', filename='css/landingpage.css') }}" rel="stylesheet" /> 
    <!-- <link rel="stylesheet" href="https://cdn.rtlcss.com/bootstrap/v4.5.3/css/bootstrap.min.css" integrity="sha384-JvExCACAZcHNJEc7156QaHXTnQL3hQBixvj5RV5buE7vgnNEzzskDtx9NQ4p6BJe" crossorigin="anonymous"> -->
    <title>DASHBOARD-OSMQ</title>
      <!-- Font Awesome Icons -->
    <!-- You can use href="/path/to/your/file.format", but I prefer this way to make it looks Flask-like-->
    <link rel="stylesheet" href="{{ url_for('static', filename='plugins/fontawesome-free/css/all.min.css') }}">
    <!-- Theme style -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/adminlte.min.css') }}">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <link rel="stlesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/vega-tooltip@0.16.0/vega-tooltip.scss">

    <script src='/static/chart-js/Chart.min.js'></script>
    <script src='/static/js/Chart.min.js'></script>
    <link rel="icon" type="image/png" href="{{ url_for('static', filename='img/favrna.png') }}"/>  
    <!-- Load OpenLayer.css -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css">

</head>

<body class="hold-transition sidebar-mini layout-fixed">
    
    <div class="wrapper">

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>
            </ul>

            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                <!-- Messages Dropdown Menu -->
                <li class="nav-item dropdown">
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">

                    </div>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->

        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <!-- <img src="/static/img/OSM.png" width="80px" height="80px" alt=""> -->
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->

                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu"
                        data-accordion="false">
                        <!-- Add icons to the links using the .nav-icon class
               with font-awesome or any other icon font library -->
                    <!-- Altair -->
                    <li class="nav-item has-treeview menu-open">
                        <a href="#" class="nav-link ">
                            <i class="nav-icon fas fa-th"></i>
                            <p>
                                Chart For OSMQ
                                <i class="right fas fa-angle-left"></i>
                            </p>
                        </a>
                        <ul class="nav nav-treeview">
                            <li class="nav-item">
                                <a href="" class="nav-link ">
                                   
                                    <p>Evaluation de la qualité de donée OSM</p>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="" class="nav-link ">
                                    
                                    <p>Altair</p>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="" class="nav-link ">
                                    
                                    <p>Chart.Js</p>
                                </a>
                            </li>
                        </ul>
                    </li> 
                        <form>
                            <div>
                            <a href="" class="nav-link ">
                                <i class="nav-icon fas fa-th"></i>
                                <p>
                                    Choisir une ville
                                    <i class="right fas fa-angle-left"></i>
                                </p>
                            </a>
                            </div>
                            <select class="form-control">
                                <option>Oran</option>
                                <option>Alger</option>
                            </select>
                            <button onclick="showChart();" type="button" class="btn btn-primary">Executer l'évaluation</button>
                        </form>
                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            {% block my_content %}
            {% endblock my_content %}
            <!-- /.content-header -->
            <!-- Main content -->
            <div class="content">
                
                        <div id="map"class="map" width="800" height="450"  style="display: none;"></div>
                        <canvas id="line_actuality" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="point_actuality" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="polygon_actuality" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="Completude" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="distinct" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="calass" width="800" height="450"  style="display: none;"></canvas>
                        <canvas id="crea_edit_point" width="800" height="450" style="display: none;"></canvas>
                        <canvas id="crea_edit_line" width="800" height="450" style="display: none;"></canvas>
                        <canvas id="crea_edit_poly" width="800" height="450" style="display: none;"></canvas>
                        <canvas id="poly" width="800" height="450" style="display: none;"></canvas>
                    
              
            </div>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->

        <!-- Control Sidebar -->
        <!-- /.control-sidebar -->

        <!-- Main Footer -->
        <footer class="main-footer">
            <!-- To the right -->
            <div class="float-right d-none d-sm-inline">
            </div>
            <!-- Default to the left -->
        </footer>
    </div>
    <!-- ./wrapper -->
   
    
    <script src="/static/js/Chart.min.2.7.2.js"></script>
<script src="/static/js/jquery.min.js"></script>
<script src="/static/js/plugin"></script>
<script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>
<!-- <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script> -->

</body>

<script>
    function showChart(){
        document.getElementById("map").style.display = 'block'
        document.getElementById("line_actuality").style.display = 'block'
        document.getElementById("point_actuality").style.display = 'block'
        document.getElementById("polygon_actuality").style.display = 'block'
        document.getElementById("Completude").style.display = 'block'
        document.getElementById("distinct").style.display = 'block'
        document.getElementById("calass").style.display = 'block'
        document.getElementById("crea_edit_point").style.display = 'block'
        document.getElementById("crea_edit_poly").style.display = 'block'
        document.getElementById("crea_edit_line").style.display = 'block'
        document.getElementById("poly").style.display = 'block'
    }

    function loadData(){
        document.getElementById("loadingFrame").style.display = "block"
        setTimeout(showChart, 3000);  
    }

    
    // Global parameters:
    // do not resize the chart canvas when its container does (keep at 600x400px)
    Chart.defaults.global.responsive = false;

    // Actuality lines
    new Chart(document.getElementById("line_actuality"), {
    type: 'doughnut',
    data: {
      labels: ['Moins de 6 Mois', 'Entre 6 et 12 Mois', 'Entre 1 an et 2 ans', 'Plus de 2 ans'],
      datasets: [{
        backgroundColor: ["#5cb85c", "#f7f400","#F9D221","#ff6700"],
        data: ['{{data.c1}}','{{data.c2}}','{{data.c3}}','{{data.c4}}']
      }]
    },
    options: {
      responsive :false,
      title: {
        display: true,
        text: 'Visualitation de lactualité des données OSM de toutes les lignes durant la période étudiée'
      },
      plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                
                    let sum = ctx.dataset._meta[0].total;
                    let percentage = (value * 100 / sum).toFixed(2) + "%";
                    return percentage;

              
                },
                color: '#000',
                     }
        }
    
    }})
    // Actuality point
    new Chart(document.getElementById("point_actuality"), {
    type: 'doughnut',
    data: {
      labels: ['Moins de 6 Mois', 'Entre 6 et 12 Mois', 'Entre 1 an et 2 ans', 'Plus de 2 ans'],
      datasets: [{
        backgroundColor: ["#5cb85c", "#f7f400","#F9D221","#ff6700"],
        data: ['{{data2.p1}}','{{data2.p2}}','{{data2.p3}}','{{data2.p4}}']
      }]
    },
    options: {
      responsive :false,
      title: {
        display: true,
        text: 'Visualitation de lactualité des données OSM de tous les points durant la période étudiée'
      },
      plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                
                    let sum = 0;
                  let dataArr = ctx.chart.data.datasets[0].data;
                  
                  dataArr.map(data => {
                      sum += parseInt(data);
                  });
                  let percentage = (parseInt(value)*100 / sum).toFixed(2)+"%";
                //   console.log('pipipi')
                //   console.log(value)
                //   console.log(sum)
                //   console.log(percentage)
                  return percentage;          
                },
                color: '#000',
                     }
        }
    
    }})

     // Actuality polygons
    new Chart(document.getElementById("polygon_actuality"), {
    type: 'doughnut',
    data: {
      labels: ['Moins de 6 Mois', 'Entre 6 et 12 Mois', 'Entre 1 an et 2 ans', 'Plus de 2 ans'],
      datasets: [{
        backgroundColor: ["#5cb85c", "#f7f400","#F9D221","#ff6700"],
        data: ['{{data3.pl1}}','{{data3.pl2}}','{{data3.pl3}}','{{data3.pl4}}']
      }]
    },
    options: {
      responsive :false,  
      title: {
        display: true,
        text: 'Visualitation de lactualité des données OSM de tous les polygones durant la période étudiée'
      },
      plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                
                    let sum = 0;
                  let dataArr = ctx.chart.data.datasets[0].data;
                  
                  dataArr.map(data => {
                      sum += parseInt(data);
                  });
                  let percentage = (parseInt(value)*100 / sum).toFixed(2)+"%";
                
                  return percentage;          
                },
                color: '#000',
                     }
        }
    
    }})

    // affichage de la complèdute
    var completude = {
        labels : [{% for item in monthcomp %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Autoroute',
        fill: true,
        lineTension: 0.1,
        backgroundColor: "rgba(232,243,63,0.7)",
        borderColor: "rgba(232,243,63,1)",
        data : [{% for item in y1 %}
        {{ item }},
        {% endfor %}]
        },{
        label: 'Routes tertiaires/secondaires',
        fill: true,
        lineTension: 0.1,
        backgroundColor: "rgba(249,210,33,0.7)",
        borderColor: "rgba(249,210,33,1)",
        data : [
	    {% for item in y2s %}
              {{ item }},
            {% endfor %}]
        },{
        label: 'Routes résidentielle',
        fill: true,
        lineTension: 0.1,
        backgroundColor: "rgba(50,205,50,0.7)",
        borderColor: "rgba(50,205,50,1)",
        data : [
	    {% for item in y3s %}
              {{ item }},
            {% endfor %}]
        },{
        label: 'Autres Routes',
        fill: true,
        lineTension: 0.1,
        backgroundColor: "rgba(255,103,0,0.7)",
        borderColor: "rgba(255,103,0,1)",
        data : [
	    {% for item in y4s %}
              {{ item }},
            {% endfor %}]
        }
        ]
        }

        new Chart(document.getElementById("Completude"), {
        type: 'line',
        data: completude,
        options: {
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Etude de la Complètude, Développement de la longeur du Réseau Routier par catégories. Longuers total en [Km]'
            }
        }
        });

    // Nombre total des contributeurs distincs par mois
    var dist = {
        labels : [{% for item in monthdist %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Nombre total de contributeurs',
        fill: false,
        backgroundColor: "rgba(121,236,36,0.4)",
        borderColor: "rgba(121,236,36,1)",
        data : [{% for item in dist %}
        {{ item }},
        {% endfor %}]
        },
        ]
        }

        new Chart(document.getElementById("distinct"), {
        type: 'line',
        data: dist,
        options: {
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Evolution du nombre total de contributeurs distincts par mois durant la période étudiée'
            }
        }
        });  
        
        
    // user calssification
    new Chart(document.getElementById("calass"), {
    type: 'doughnut',
    data: {
      labels: ['Contributeur Expérimenté', 'Contributeur débutant', 'Contributeur non récurrent'],
      datasets: [{
        backgroundColor: ["#52d726", "#ffec00","#ff6700"],
        data: ['{{data4.senior_mappers}}','{{data4.junior_mappers}}','{{data4.nonrecurring_mappers}}']
      }]
    },
    options: {
      responsive :false,  
      title: {
        display: true,
        text: 'Classification des types de cartographes catégorisés selon leurs contributions durant la période étudiée'
      },
      plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                
                    let sum = 0;
                  let dataArr = ctx.chart.data.datasets[0].data;
                  
                  dataArr.map(data => {
                      sum += parseInt(data);
                  });
                  let percentage = (parseInt(value)*100 / sum).toFixed(2)+"%";
                
                  return percentage;          
                },
                color: '#000',
                     }
        }
    
    }})

    // Nombre total des Points Crées et editées
    var pointcreaedit = {
        labels : [{% for item in monthpoint %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Nombre total des Points Crées',
        fill: false,
        backgroundColor: "rgba(121,236,36,0.4)",
        borderColor: "rgba(121,236,36,1)",
        data : [{% for item in createdpoint %}
        {{ item }},
        {% endfor %}]
        },{
        label: 'Nombre total des Points Edités',
        fill: false,
        backgroundColor: "rgba(255, 195,0,0.4)",
        borderColor: "rgba(255, 195,0,1)",
        data : [
	    {% for item in editedpoint %}
              {{ item }},
            {% endfor %}]
        }
        ]
        }

        new Chart(document.getElementById("crea_edit_point"), {
        type: 'line',
        data: pointcreaedit,
        options: {
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Développement des Points Crées et Editées durant la période étudiée'
            }
        }
        });

               

     // Nombre total des lignes Crées et editées
     var linecreaedit = {
        labels : [{% for item in monthline %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Nombre total des Lignes Crées',
        fill: false,
        backgroundColor: "rgba(121,236,36,0.4)",
        borderColor: "rgba(121,236,36,1)",
        data : [{% for item in createdline %}
        {{ item }},
        {% endfor %}]
        },{
        label: 'Nombre total des Lignes Editées',
        fill: false,
        backgroundColor: "rgba(255, 195,0,0.4)",
        borderColor: "rgba(255, 195,0,1)",
        data : [
	    {% for item in editedline %}
              {{ item }},
            {% endfor %}]
        }
        ]
        }

        new Chart(document.getElementById("crea_edit_line"), {
        type: 'line',
        data: linecreaedit,
        options: {
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Développement des Lignes Crées et Editées durant la période étudiée'
            }
        }
        });

      

    // Nombre total des Polygons Crées et editées
        var polycreaedit = {
        labels : [{% for item in month %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Nombre total des Polygons Crées',
        fill: false,
        backgroundColor: "rgba(121,236,36,0.4)",
        borderColor: "rgba(121,236,36,1)",
        data : [{% for item in createdpoly %}
        {{ item }},
        {% endfor %}]
        },{
        label: 'Nombre total des Polygons Editées',
        fill: false,
        backgroundColor: "rgba(255, 195,0,0.4)",
        borderColor: "rgba(255, 195,0,1)",
        data : [
	    {% for item in editedpoly %}
              {{ item }},
            {% endfor %}]
        }
        ]
        }

        new Chart(document.getElementById("crea_edit_poly"), {
        type: 'line',
        data: polycreaedit,
        options: {
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Développement des Polygons Crées et Editées durant la période étudiée'
            }
        }
        });


    // Développement des polygones invalides
    var poly_bymount = {
        labels : [{% for item in monthpoly %}
        "{{item}}",
        {% endfor %}],
        datasets : [{
        label: 'Nombre de polygones invalides',
        type: 'bar',
        yAxisID: 'A',
        fill: false,
        backgroundColor: "rgba(121,236,36,0.7)",
        borderColor: "rgba(121,236,36,1)",
        data : [{% for item in invalid %}
        {{ item }},
        {% endfor %}]
        },{
        label: 'Pourcentage de polygones invalides de tous les polygones [%]',
        yAxisID: 'B',
        type: 'line',
        fill: false,
        backgroundColor: "rgba(255,103,0,0.5)",
        borderColor: "rgba(255,103,0,7)",
        data : [{% for item in quotients %}
        {{ item }},
        {% endfor %}]
        }
        ]
        }

        new Chart(document.getElementById("poly"), {
        type: 'bar',
        data: poly_bymount,
        options: {
            scales: {
                    yAxes: [{
                        id: 'A',
                        type: 'linear',
                        position: 'left',
                    }, {
                        id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                        max: 2,
                        min: 0
                        }
                    }]
                 },
    
            plugins: {
                datalabels: {
                    // hide datalabels for all datasets
                    display: false
                }},
            title: {
            display: true,
            text: 'Evolution et Développement du nombre de polygones invalides comparés ainsi que du Pourcentage de polygones invalides de tous les polygones durant la période étudiée'
            }
        }
        });  

    function myFunction() {
        window.location.href = "{{ url_for('bp_dashboard.dashboard') }}"
    };

    function map() {
        window.location.href = "{{ url_for('bp_map.map') }}"

    }
</script>

</html>